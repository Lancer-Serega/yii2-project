(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

$(function () {
    // Svg Polyfill
    svg4everybody();

    // Header - Sticky
    function sticky() {
        var offsetScroll = window.pageYOffset || document.documentElement.scrollTop;
        if (offsetScroll > 0) {
            $('html').addClass('is-sticky');
        } else {
            $('html').removeClass('is-sticky');
        }
    }
    sticky();
    $(window).on('scroll', function () {
        sticky();
    });

    // Header - Nav
    $('.nav').on('click', '.nav__btn', function (event) {
        event.preventDefault();
        var htmlBlock = $('html');
        if (htmlBlock.is('.is-nav-open')) {
            htmlBlock.removeClass('is-nav-open');
        } else {
            htmlBlock.addClass('is-nav-open');
        }
    });

    // Header - Signin
    $(document).on('click', '.signin__btn', function (event) {
        event.preventDefault();
        var htmlBlock = $('html');
        if (htmlBlock.is('.is-signin-form-open')) {
            htmlBlock.removeClass('is-signin-form-open');
        } else {
            htmlBlock.addClass('is-signin-form-open');
        }
    });
    $(document).on('click', function (event) {
        if ($(event.target).closest('.signin-form').length === 0) {
            $('html').removeClass('is-signin-open');
        }
    });

    // Header - Language
    $(document).on('click', '.language__btn', function (event) {
        event.preventDefault();
        var htmlBlock = $('html');
        if (htmlBlock.is('.is-language-open')) {
            htmlBlock.removeClass('is-language-open');
        } else {
            htmlBlock.addClass('is-language-open');
        }
    });
    $(document).on('click', function (event) {
        if ($(event.target).closest('.language').length === 0) {
            $('html').removeClass('is-language-open');
        }
    });

    // Slides
    var slickPrev = '<button class="slick-arrow slick-prev"><svg class="icon-prev"><use xlink:href="sprites/sprite.svg#icon-prev"></use></svg></button>',
        slickNext = '<button class="slick-arrow slick-next"><svg class="icon-next"><use xlink:href="sprites/sprite.svg#icon-next"></use></svg></button>',
        slickPrevVertical = '<button class="slick-arrow slick-prev"><svg class="icon-prev-vertical"><use xlink:href="sprites/sprite.svg#icon-prev-vertical"></use></svg></button>',
        slickNextVertical = '<button class="slick-arrow slick-next"><svg class="icon-next-vertical"><use xlink:href="sprites/sprite.svg#icon-next-vertical"></use></svg></button>';

    // Hero Slides
    $('.js-slick-hero').slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        arrows: true,
        dots: true,
        fade: false,
        infinite: true,
        nextArrow: slickNext,
        prevArrow: slickPrev,
        autoplay: false,
        pauseOnHover: false,
        autoplaySpeed: 10000,
        responsive: [{
            breakpoint: 767,
            settings: {
                adaptiveHeight: true,
                autoplay: false
            }
        }]
    });
    setTimeout(function () {
        var mq = $(window).width();

        if (mq >= 768) {
            $('.js-slick-hero').slick('slickPlay');
        }
    }, 5000);

    // Images Slides
    $('.js-reviews').each(function () {
        var reviews = $(this),
            reviewsSlides = reviews.find('.js-reviews-slides'),
            reviewsThumbs = reviews.find('.js-reviews-thumbs');

        reviewsSlides.slick({
            slidesToShow: 1,
            slidesToScroll: 1,
            arrows: false,
            dots: false,
            fade: true,
            infinite: true,
            asNavFor: reviewsThumbs,
            nextArrow: slickNext,
            prevArrow: slickPrev
        });

        reviewsThumbs.slick({
            vertical: true,
            centerMode: true,
            centerPadding: 0,
            slidesToShow: 3,
            slidesToScroll: 1,
            asNavFor: reviewsSlides,
            arrows: true,
            dots: false,
            focusOnSelect: true,
            nextArrow: slickNextVertical,
            prevArrow: slickPrevVertical,
            infinite: true,
            responsive: [{
                breakpoint: 991,
                settings: {
                    vertical: false
                }
            }, {
                breakpoint: 767,
                settings: {
                    slidesToShow: 1,
                    vertical: false
                }
            }]
        });
    });

    // Fancybox
    $('[data-fancybox]').fancybox({
        type: 'inline',
        touch: false,
        buttons: []
    });

    // Forms
    $('select').styler({
        selectSearch: false,
        selectSmartPositioning: false
    });

    // Phone
    $('input[type=tel]').inputmask({ "mask": "+7 (999) 999-99-99", showMaskOnFocus: true });

    // Accordion
    $('.js-accordion').on('click', 'dt', function (event) {
        event.preventDefault();
        if ($(this).is('.is-active')) {
            $(this).removeClass('is-active').next('dd').slideUp('fast');
        } else {
            $(this).closest('.js-accordion').find('dt').removeClass('is-active');
            $(this).closest('.js-accordion').find('dd').slideUp('fast');
            $(this).addClass('is-active').next('dd').slideDown('fast');
        }
    });

    // ScrollTo
    $('.js-scrollto').on('click', function (event) {
        event.preventDefault();
        var href = $(this).attr('href'),
            offsetTop = $(href).offset().top;
        $('html, body').animate({
            scrollTop: offsetTop - $('.header').height() - 14
        }, 500);
    });

    // Validate
    $.validator.addMethod("regexp", function (value, element) {
        return this.optional(element) || /^\+\d \(\d{3}\) \d{3}-\d{2}-\d{2}$/.test(value);
    });

    var validateErrorPlacement = function validateErrorPlacement(error, element) {
        error.addClass('ui-validate');
        error.appendTo(element.closest('.ui-field'));
    };

    var validateHighlight = function validateHighlight(element) {
        $(element).parent().addClass("is-error").removeClass('is-valid');
    };

    var validateUnhighlight = function validateUnhighlight(element) {
        $(element).parent().addClass('is-valid').removeClass("is-error");
    };

    $('.js-validate').each(function () {
        $(this).validate({
            errorElement: "span",
            ignore: ":disabled,:hidden",
            highlight: validateHighlight,
            unhighlight: validateUnhighlight,
            rules: {
                // fullname: "required",
                // tel: {
                //     required: true,
                //     regexp: true
                // },
                email: {
                    required: true,
                    email: true
                }
                // message: "required",
                // city: "required",
                // index: "required",
                // address: "required",
                // password: "required",
                // passwordconfirm: {
                //     required: true,
                //     equalTo: "#password"
                // },
                // accept: "required"

            },
            messages: {
                fullname: 'Вы не ввели ФИО',
                tel: 'Вы не ввели номер телефона',
                email: 'Введите email',
                city: 'Введите город',
                index: 'Введите индекс',
                address: 'Введите адрес',
                message: 'Введите сообщение',
                password: 'Введите пароль',
                passwordconfirm: {
                    required: 'Повторите пароль',
                    equalTo: 'Пароли не совпадают'
                },
                accept: 'Подтвердите условия'
            },
            errorPlacement: validateErrorPlacement,
            submitHandler: function submitHandler(form) {
                var data = $(form).serialize(); //$(form).data('type') === 'JSON' ? $(form).serializeArray() : $(form).serialize();

                $.ajax({
                    type: $(form).attr('method') || 'get',
                    url: $(form).attr('action') || '#',
                    // dataType: $(form).data('type') || 'JSON',
                    // contentType: $(form).data('contentType') || 'application/json',
                    data: data,
                    success: function success(form) {
                        console.log(form.statusText);
                        location.reload();
                    },
                    error: function error(xhr, status, _error) {
                        console.log("Result: " + status + " " + _error + " " + xhr.status + " " + xhr.statusText);
                    },
                    fail: function fail(xhr, status, error) {
                        console.log("Result: " + status + " " + error + " " + xhr.status + " " + xhr.statusText);
                    }
                });
                event.preventDefault();
            }
        });
    });
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
